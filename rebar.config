{erl_opts, [debug_info, verbose]}.
{erl_first_files, [
    "src/merlin.erl"
    "src/merlin_annotations.erl",
    "src/merlin_bindings.erl",
    "src/merlin_error.erl",
    "src/merlin_internal.erl",
    "src/merlin_lib.erl",
    "src/merlin_module.erl"
]}.

{deps, []}.

{project_plugins, [
    erlfmt,
    rebar3_ex_doc,
    rebar3_hex
]}.

{erlfmt, [
    write,
    {print_width, 88},
    {files, ["{src,include,test,examples}/*.{hrl,erl,app.src}", "rebar.config"]}
]}.

{hex, [{doc, ex_doc}]}.

{shell, [{config, "priv/sys.config"}]}.

{eunit_opts, [
    no_tty,
    {report, {unite_compact, []}},
    {sys_config, "priv/app.config"}
]}.

{cover_excl_mods, [merlin_internal]}.

{dialyzer, [
    {warnings, [
        no_return,
        no_unused,
        no_improper_lists,
        no_fun_app,
        no_match,
        no_opaque,
        no_fail_call,
        no_contracts,
        no_behaviours,
        no_undefined_callbacks,
        unmatched_returns,
        error_handling,
        % race_conditions,
        underspecs
        % overspecs
        % specdiffs
    ]},
    {base_plt_apps, [
        crypto,
        debugger,
        erts,
        kernel,
        stdlib,
        syntax_tools
    ]}
]}.

{xref_warnings, true}.
{xref_checks, [
    undefined_function_calls,
    undefined_functions,
    locals_not_used,
    %% exports_not_used,
    deprecated_function_calls,
    deprecated_functions
]}.
{xref_ignores, [color, tdiff]}.

{edoc_opts, [{preprocess, true}]}.

{ex_doc, [
    {source_url, <<"https://github.com/kivra/merlin">>},
    {extras, [<<"README.md">>, <<"LICENSE">>]},
    {main, <<"readme">>},
    {skip_undefined_reference_warnings_on, []}
]}.

{profiles, [
    {repl, [
        {erl_opts, [{d, 'MERLIN_INTERNAL_EXPORT_ALL', true}]}
    ]},
    {'E', [
        {pre_hooks, [{compile, "sh priv/scripts/copy-beams.sh"}]},
        {erl_opts, ['E']}
    ]},
    {'P', [
        {pre_hooks, [{compile, "sh priv/scripts/copy-beams.sh"}]},
        {erl_opts, ['P']}
    ]},
    {examples, [
        {pre_hooks, [{compile, "sh priv/scripts/copy-beams.sh"}]},
        {erl_opts, ['E']},
        {extra_src_dirs, ["examples"]}
    ]},
    {test, [
        {cover_enabled, true},
        {xref_ignores, []},
        {deps, [
            erlfmt,
            proper,
            unite
        ]},
        {provider_hooks, [
            {post, [{eunit, cover}]}
        ]},
        {post_hooks, [
            {eunit, "escript priv/scripts/gen-lcov.escript"}
        ]}
    ]}
]}.
